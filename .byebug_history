c
@items.previous_page
@items.prev_page
@items.next_page
@items.total_entries
@items.current_page
@items.count
@items
@items.page
@items.total_page
params
c
request.xhr?
request
c
@items.total_page
@items.page
@items.per_page
@items
c
@items.count
c
@items.count
@items
c
@item.errors.full_messages
@item.errors.messages
@item.errors
c
n
params
@item
c
items
n
params
n
c
n
cn
n
params
n
params
c
Order.all(&:check_status)
Order.all
c
params
c
@item
a.save
a
a=Item.new
Item.new
@item.update
@item.save
@item.valid?
@item.is_valid?
@item
c
n
current
c
n
order_items.map(&:status)
order_items
c
@order
c
self.order_items.map(&:status).uniq
self.order_items.map(&:status)
self
c
charge.to_i
n
c
charge.to_i
order.amount
order
n
status
c
quantity
item.left
item.id
n
status
c
OrderItem.delete_all
OrderItem
OrderItems
Order.order_items
Order.all
c
n
item_id
self.status
c
n
left
lefit
id
c
id
Order.includes(:order_items).where("order_items.id" => id)
Order.includes(:order_items)
Order.where("outdate > ? and status != ?", "2017-12-17", 'completed' )
Order.where("outdate < ? and status != ?", "2017-12-19", 'completed' )
Order.all
Order.new
Item.find(1)
id
c
n
c
n
c
params
c
n
OrderItem.exists?(self)
self.status
c
params
c
self
c
params
@oi
c
params
c
exit
OrderItem.new
params
exit
params
c
orderitem
n
c
orderitem
n
params
c
params
exit
params
exit
c
@order
c
self.order
c
request.subdomain
n
c
n
request.subdomain
current_user
c
self
self.left = self.quantity
self
c
params[:q]
params
params[:from]
c
params[:from]
params
c
x.errors.full_messages
x.errors.count
x.valid?
x=order.order_items.new(item_id: params[:item_id], quantity: params[:quantity])
order.order_items.new(item_id: params[:item_id], quantity: params[:quantity]).errors.count
order.order_items.new(item_id: params[:item_id], quantity: params[:quantity]).errors
order.order_items.new(item_id: params[:item_id], quantity: params[:quantity]).valid?
order.order_items.new(item_id: params[:item_id], quantity: params[:quantity])
c
self.item.left
self.order.status
self
dself
c
@order.order_items.where(status: 'Out')
@order.order_items.where(status: 'out')
@order.order_items
@order
c
exit
c
request.subdomain
root_path
c
current_user
c
current_user
c
request.host
c
request.host
request.root
request.domain
request.subdomain
resource
root_path
c
resource
c
root_path
root_url
request.referrer
c
params
resource
c
resource.errors.count
resource
resourice
c
@oi
c
item_id
self.item_id
c
left
n
quantity
item.left
c
self.item
item.left
c
self.valid?
self.is_valid?
self
c
exit
Date.today
created_at.to_date
created_at
status
c
order_items.map(&:make_response)
order_items
n
(days*self.item.charge.to_i)
self
days
n
c
days*self.item.charge.to_i
n
